{"version":3,"file":"material-react-toastify.cjs.production.min.js","sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/core/eventManager.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/hooks/useKeeper.ts","../src/hooks/toastContainerReducer.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastPositioner.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx"],"sourcesContent":["import { isValidElement } from 'react';\r\n\r\nimport { Id } from '../types';\r\n\r\nexport function isNum(v: any): v is Number {\r\n  return typeof v === 'number' && !isNaN(v);\r\n}\r\n\r\nexport function isBool(v: any): v is Boolean {\r\n  return typeof v === 'boolean';\r\n}\r\n\r\nexport function isStr(v: any): v is String {\r\n  return typeof v === 'string';\r\n}\r\n\r\nexport function isFn(v: any): v is Function {\r\n  return typeof v === 'function';\r\n}\r\n\r\nexport function parseClassName(v: any) {\r\n  return isStr(v) || isFn(v) ? v : null;\r\n}\r\n\r\nexport function objectValues<T>(obj: Record<string, T>) {\r\n  return Object.keys(obj).map(key => obj[key]);\r\n}\r\n\r\nexport function hasToastId(toastId?: Id) {\r\n  return toastId === 0 || toastId;\r\n}\r\n\r\nexport function getAutoCloseDelay(\r\n  toastAutoClose?: false | number,\r\n  containerAutoClose?: false | number\r\n) {\r\n  return toastAutoClose === false ||\r\n    (isNum(toastAutoClose) && toastAutoClose > 0)\r\n    ? toastAutoClose\r\n    : containerAutoClose;\r\n}\r\n\r\nexport const canUseDom = !!(\r\n  typeof window !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\nexport function canBeRendered<T>(content: T): boolean {\r\n  return (\r\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\r\n  );\r\n}\r\n","import { ToastPosition, TypeOptions } from '../types';\r\n\r\ntype KeyOfPosition =\r\n  | 'TOP_LEFT'\r\n  | 'TOP_RIGHT'\r\n  | 'TOP_CENTER'\r\n  | 'BOTTOM_LEFT'\r\n  | 'BOTTOM_RIGHT'\r\n  | 'BOTTOM_CENTER';\r\n\r\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\r\n\r\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\r\n  TOP_LEFT: 'top-left',\r\n  TOP_RIGHT: 'top-right',\r\n  TOP_CENTER: 'top-center',\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  BOTTOM_CENTER: 'bottom-center'\r\n};\r\n\r\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error',\r\n  DEFAULT: 'default',\r\n  DARK: 'dark'\r\n};\r\n\r\nexport enum DEFAULT {\r\n  COLLAPSE_DURATION = 300,\r\n  DEBOUNCE_DURATION = 50,\r\n  CSS_NAMESPACE = 'Toastify'\r\n}\r\n","import {\r\n  Id,\r\n  ToastContent,\r\n  ClearWaitingQueueParams,\r\n  NotValidatedToastProps\r\n} from '../types';\r\nimport { ContainerInstance } from '../hooks';\r\n\r\nexport enum Event {\r\n  Show,\r\n  Clear,\r\n  DidMount,\r\n  WillUnmount,\r\n  Change,\r\n  ClearWaitingQueue\r\n}\r\n\r\ntype OnShowCallback = (\r\n  content: ToastContent,\r\n  options: NotValidatedToastProps\r\n) => void;\r\ntype OnClearCallback = (id?: Id) => void;\r\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\r\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\r\ntype OnWillUnmountCallback = OnDidMountCallback;\r\nexport type OnChangeCallback = (\r\n  toast: number,\r\n  containerId?: number | string\r\n) => void;\r\ntype Callback =\r\n  | OnShowCallback\r\n  | OnClearCallback\r\n  | OnClearWaitingQueue\r\n  | OnDidMountCallback\r\n  | OnWillUnmountCallback\r\n  | OnChangeCallback;\r\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\r\n\r\nexport interface EventManager {\r\n  list: Map<Event, Callback[]>;\r\n  emitQueue: Map<Event, TimeoutId[]>;\r\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\r\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\r\n  on(\r\n    event: Event.ClearWaitingQueue,\r\n    callback: OnClearWaitingQueue\r\n  ): EventManager;\r\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\r\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\r\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\r\n  off(event: Event, callback?: Callback): EventManager;\r\n  cancelEmit(event: Event): EventManager;\r\n  emit(\r\n    event: Event.Show,\r\n    content: React.ReactNode,\r\n    options: NotValidatedToastProps\r\n  ): void;\r\n  emit(event: Event.Clear, id?: string | number): void;\r\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\r\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\r\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\r\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\r\n}\r\n\r\nexport const eventManager: EventManager = {\r\n  list: new Map(),\r\n  emitQueue: new Map(),\r\n\r\n  on(event: Event, callback: Callback) {\r\n    this.list.has(event) || this.list.set(event, []);\r\n    this.list.get(event)!.push(callback);\r\n    return this;\r\n  },\r\n\r\n  off(event, callback) {\r\n    if (callback) {\r\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\r\n      this.list.set(event, cb);\r\n      return this;\r\n    }\r\n    this.list.delete(event);\r\n    return this;\r\n  },\r\n\r\n  cancelEmit(event) {\r\n    const timers = this.emitQueue.get(event);\r\n    if (timers) {\r\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\r\n      this.emitQueue.delete(event);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\r\n  emit(event: Event, ...args: any[]) {\r\n    this.list.has(event) &&\r\n      this.list.get(event)!.forEach((callback: Callback) => {\r\n        const timer = setTimeout(() => {\r\n          // @ts-ignore\r\n          callback(...args);\r\n        }, 0);\r\n\r\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\r\n        this.emitQueue.get(event)!.push(timer);\r\n      });\r\n  }\r\n};\r\n","import { DEFAULT } from './constant';\r\n\r\n/**\r\n * Used to collapse toast after exit animation\r\n */\r\nexport function collapseToast(\r\n  node: HTMLElement,\r\n  done: () => void,\r\n  duration = DEFAULT.COLLAPSE_DURATION\r\n) {\r\n  const height = node.scrollHeight;\r\n  const style = node.style;\r\n\r\n  requestAnimationFrame(() => {\r\n    style.minHeight = 'initial';\r\n    style.height = height + 'px';\r\n    style.transition = `all ${duration}ms`;\r\n\r\n    requestAnimationFrame(() => {\r\n      style.height = '0';\r\n      style.padding = '0';\r\n      style.margin = '0';\r\n      setTimeout(() => done(), duration as number);\r\n    });\r\n  });\r\n}\r\n","import * as React from 'react';\r\nimport { Transition } from 'react-transition-group';\r\nimport { ToastTransitionProps } from '../types';\r\n\r\nimport { collapseToast } from './collapseToast';\r\nimport { DEFAULT } from './constant';\r\n\r\nexport interface CSSTransitionProps {\r\n  /**\r\n   * Css class to apply when toast enter\r\n   */\r\n  enter: string;\r\n\r\n  /**\r\n   * Css class to apply when toast leave\r\n   */\r\n  exit: string;\r\n\r\n  /**\r\n   * Define the duration of the transition in ms\r\n   * You can also pass an array `[enterDuration, exitDuration]`\r\n   * `Default: 750`\r\n   */\r\n  duration?: number | [number, number];\r\n\r\n  /**\r\n   * Append current toast position to the classname.\r\n   * For instance `myclass--top-center`...\r\n   * `Default: false`\r\n   */\r\n  appendPosition?: boolean;\r\n\r\n  /**\r\n   * Collapse toast smoothly when animation end\r\n   * `Default: true`\r\n   */\r\n  collapse?: boolean;\r\n\r\n  /**\r\n   * Collapse transition duration\r\n   * `Default: 300`\r\n   */\r\n  collapseDuration?: number;\r\n}\r\n\r\nexport function cssTransition({\r\n  enter,\r\n  exit,\r\n  duration = 750,\r\n  appendPosition = false,\r\n  collapse = true,\r\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\r\n}: CSSTransitionProps) {\r\n  let enterDuration: number, exitDuration: number;\r\n\r\n  if (Array.isArray(duration) && duration.length === 2) {\r\n    [enterDuration, exitDuration] = duration;\r\n  } else {\r\n    enterDuration = exitDuration = duration as number;\r\n  }\r\n\r\n  return function ToastTransition({\r\n    children,\r\n    position,\r\n    preventExitTransition,\r\n    done,\r\n    ...props\r\n  }: ToastTransitionProps) {\r\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\r\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\r\n\r\n    const onEnter = () => {\r\n      const node = props.nodeRef.current;\r\n      if (node) {\r\n        node.classList.add(enterClassName);\r\n        node.style.animationFillMode = 'forwards';\r\n        node.style.animationDuration = `${enterDuration}ms`;\r\n      }\r\n    };\r\n\r\n    const onEntered = () => {\r\n      const node = props.nodeRef.current;\r\n      if (node) {\r\n        node.classList.remove(enterClassName);\r\n        node.style.cssText = '';\r\n      }\r\n    };\r\n\r\n    const onExited = () => {\r\n      const node = props.nodeRef.current;\r\n\r\n      if (node) {\r\n        node.removeEventListener('animationend', onExited);\r\n        collapse ? collapseToast(node, done, collapseDuration) : done();\r\n      }\r\n    };\r\n\r\n    const onExit = () => {\r\n      const node = props.nodeRef.current;\r\n      if (node) {\r\n        node.classList.add(exitClassName);\r\n        node.style.animationFillMode = 'forwards';\r\n        node.style.animationDuration = `${exitDuration}ms`;\r\n        node.addEventListener('animationend', onExited);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Transition\r\n        {...props}\r\n        timeout={\r\n          preventExitTransition\r\n            ? collapse\r\n              ? collapseDuration\r\n              : DEFAULT.DEBOUNCE_DURATION\r\n            : {\r\n                enter: enterDuration,\r\n                exit: collapse\r\n                  ? exitDuration + collapseDuration\r\n                  : exitDuration + DEFAULT.DEBOUNCE_DURATION\r\n              }\r\n        }\r\n        onEnter={onEnter}\r\n        onEntered={onEntered}\r\n        onExit={preventExitTransition ? onExited : onExit}\r\n        unmountOnExit\r\n      >\r\n        {children}\r\n      </Transition>\r\n    );\r\n  };\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\r\nexport function useKeeper<T>(arg: T, refresh = false) {\r\n  const ref = useRef<T>(arg);\r\n\r\n  useEffect(() => {\r\n    if (refresh) ref.current = arg;\r\n  });\r\n\r\n  return ref.current;\r\n}\r\n","import { Id } from '../types';\r\n\r\nimport { hasToastId } from '../utils';\r\n\r\nexport type State = Array<Id>;\r\nexport type Action =\r\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\r\n  | { type: 'REMOVE'; toastId?: Id };\r\n\r\nexport function reducer(state: State, action: Action) {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return [...state, action.toastId].filter(id => id !== action.staleId);\r\n    case 'REMOVE':\r\n      return hasToastId(action.toastId)\r\n        ? state.filter(id => id !== action.toastId)\r\n        : [];\r\n  }\r\n}\r\n","import {\r\n  useEffect,\r\n  useRef,\r\n  useReducer,\r\n  cloneElement,\r\n  isValidElement\r\n} from 'react';\r\nimport {\r\n  parseClassName,\r\n  canBeRendered,\r\n  isBool,\r\n  isFn,\r\n  isNum,\r\n  isStr,\r\n  hasToastId,\r\n  getAutoCloseDelay\r\n} from '../utils';\r\nimport { eventManager, Event } from '../core/eventManager';\r\n\r\nimport {\r\n  Id,\r\n  ToastContainerProps,\r\n  ToastProps,\r\n  ToastContent,\r\n  Toast,\r\n  ToastPosition,\r\n  ClearWaitingQueueParams,\r\n  NotValidatedToastProps,\r\n  ToastTransition\r\n} from '../types';\r\nimport { useKeeper } from './useKeeper';\r\nimport { reducer } from './toastContainerReducer';\r\n\r\ntype CollectionItem = Record<Id, Toast>;\r\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\r\n\r\ninterface QueuedToast {\r\n  toastContent: ToastContent;\r\n  toastProps: ToastProps;\r\n  staleId?: Id;\r\n}\r\n\r\nexport interface ContainerInstance {\r\n  toastKey: number;\r\n  displayedToast: number;\r\n  props: ToastContainerProps;\r\n  containerId?: Id | null;\r\n  isToastActive: (toastId: Id) => boolean;\r\n  getToast: (id: Id) => Toast | null;\r\n}\r\n\r\nexport function useToastContainer(props: ToastContainerProps) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  const [toast, dispatch] = useReducer(reducer, []);\r\n  const containerRef = useRef(null);\r\n  let toastCount = useKeeper(0);\r\n  let queue = useKeeper<QueuedToast[]>([]);\r\n  const collection = useKeeper<CollectionItem>({});\r\n  const instance = useKeeper<ContainerInstance>({\r\n    toastKey: 1,\r\n    displayedToast: 0,\r\n    props,\r\n    containerId: null,\r\n    isToastActive: isToastActive,\r\n    getToast: id => collection[id] || null\r\n  });\r\n\r\n  useEffect(() => {\r\n    instance.containerId = props.containerId;\r\n    eventManager\r\n      .cancelEmit(Event.WillUnmount)\r\n      .on(Event.Show, buildToast)\r\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\r\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\r\n      .emit(Event.DidMount, instance);\r\n\r\n    return () => eventManager.emit(Event.WillUnmount, instance);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    instance.isToastActive = isToastActive;\r\n    instance.displayedToast = toast.length;\r\n    eventManager.emit(Event.Change, toast.length, props.containerId);\r\n  }, [toast]);\r\n\r\n  useEffect(() => {\r\n    instance.props = props;\r\n  });\r\n\r\n  function isToastActive(id: Id) {\r\n    return toast.indexOf(id) !== -1;\r\n  }\r\n\r\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\r\n    const { limit, enableMultiContainer } = instance.props;\r\n    if (\r\n      limit &&\r\n      (!containerId ||\r\n        (instance.containerId === containerId && enableMultiContainer))\r\n    ) {\r\n      toastCount -= queue.length;\r\n      queue = [];\r\n    }\r\n  }\r\n\r\n  function removeToast(toastId?: Id) {\r\n    const queueLen = queue.length;\r\n    toastCount = hasToastId(toastId)\r\n      ? toastCount - 1\r\n      : toastCount - instance.displayedToast;\r\n\r\n    if (toastCount < 0) toastCount = 0;\r\n\r\n    if (queueLen > 0) {\r\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\r\n\r\n      if (queueLen === 1 || freeSlot === 1) {\r\n        instance.displayedToast++;\r\n        dequeueToast();\r\n      } else {\r\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\r\n        instance.displayedToast = toDequeue;\r\n\r\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\r\n      }\r\n    }\r\n    dispatch({ type: 'REMOVE', toastId });\r\n  }\r\n\r\n  function dequeueToast() {\r\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\r\n\r\n    // ensure that exit transition has been completed, hence the timeout\r\n    setTimeout(() => {\r\n      appendToast(toastContent, toastProps, staleId);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\r\n  function isNotValid({\r\n    containerId,\r\n    toastId,\r\n    updateId\r\n  }: NotValidatedToastProps) {\r\n    return !containerRef.current ||\r\n      (instance.props.enableMultiContainer &&\r\n        containerId !== instance.props.containerId) ||\r\n      (instance.isToastActive(toastId) && updateId == null)\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\r\n  function buildToast(\r\n    content: ToastContent,\r\n    { delay, staleId, ...options }: NotValidatedToastProps\r\n  ) {\r\n    if (!canBeRendered(content) || isNotValid(options)) return;\r\n\r\n    const { toastId, updateId } = options;\r\n    const { props, isToastActive } = instance;\r\n    const closeToast = () => removeToast(toastId);\r\n    const isNotAnUpdate = !isToastActive(toastId);\r\n\r\n    if (isNotAnUpdate) toastCount++;\r\n\r\n    const toastProps: ToastProps = {\r\n      toastId,\r\n      updateId,\r\n      key: options.key || instance.toastKey++,\r\n      type: options.type,\r\n      closeToast: closeToast,\r\n      closeButton: options.closeButton,\r\n      rtl: props.rtl,\r\n      position: options.position || (props.position as ToastPosition),\r\n      transition: options.transition || (props.transition as ToastTransition),\r\n      className: parseClassName(options.className || props.toastClassName),\r\n      bodyClassName: parseClassName(\r\n        options.bodyClassName || props.bodyClassName\r\n      ),\r\n      style: options.style || props.toastStyle,\r\n      bodyStyle: options.bodyStyle || props.bodyStyle,\r\n      onClick: options.onClick || props.onClick,\r\n      pauseOnHover: isBool(options.pauseOnHover)\r\n        ? options.pauseOnHover\r\n        : props.pauseOnHover,\r\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\r\n        ? options.pauseOnFocusLoss\r\n        : props.pauseOnFocusLoss,\r\n      draggable: isBool(options.draggable)\r\n        ? options.draggable\r\n        : props.draggable,\r\n      draggablePercent: isNum(options.draggablePercent)\r\n        ? options.draggablePercent\r\n        : (props.draggablePercent as number),\r\n      closeOnClick: isBool(options.closeOnClick)\r\n        ? options.closeOnClick\r\n        : props.closeOnClick,\r\n      progressClassName: parseClassName(\r\n        options.progressClassName || props.progressClassName\r\n      ),\r\n      progressStyle: options.progressStyle || props.progressStyle,\r\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\r\n      hideProgressBar: isBool(options.hideProgressBar)\r\n        ? options.hideProgressBar\r\n        : props.hideProgressBar,\r\n      progress: options.progress,\r\n      role: isStr(options.role) ? options.role : props.role,\r\n      deleteToast() {\r\n        removeFromCollection(toastId);\r\n      }\r\n    };\r\n\r\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\r\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\r\n\r\n    let closeButton = props.closeButton;\r\n\r\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\r\n      closeButton = options.closeButton;\r\n    } else if (options.closeButton === true) {\r\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\r\n    }\r\n\r\n    toastProps.closeButton = closeButton;\r\n\r\n    let toastContent = content;\r\n\r\n    if (isValidElement(content) && !isStr(content.type)) {\r\n      toastContent = cloneElement(content, {\r\n        closeToast\r\n      });\r\n    } else if (isFn(content)) {\r\n      toastContent = content({ closeToast });\r\n    }\r\n\r\n    // not handling limit + delay by design. Waiting for user feedback first\r\n    if (\r\n      props.limit &&\r\n      props.limit > 0 &&\r\n      toastCount > props.limit &&\r\n      isNotAnUpdate\r\n    ) {\r\n      queue.push({ toastContent, toastProps, staleId });\r\n    } else if (isNum(delay) && (delay as number) > 0) {\r\n      setTimeout(() => {\r\n        appendToast(toastContent, toastProps, staleId);\r\n      }, delay);\r\n    } else {\r\n      appendToast(toastContent, toastProps, staleId);\r\n    }\r\n  }\r\n\r\n  function appendToast(\r\n    content: ToastContent,\r\n    toastProps: ToastProps,\r\n    staleId?: Id\r\n  ) {\r\n    const { toastId } = toastProps;\r\n\r\n    collection[toastId] = {\r\n      content,\r\n      props: toastProps\r\n    };\r\n    dispatch({\r\n      type: 'ADD',\r\n      toastId,\r\n      staleId\r\n    });\r\n  }\r\n\r\n  function removeFromCollection(toastId: Id) {\r\n    delete collection[toastId];\r\n    forceUpdate();\r\n  }\r\n\r\n  function getToastToRender<T>(\r\n    cb: (position: ToastPosition, toastList: Toast[]) => T\r\n  ) {\r\n    const toastToRender: ToastToRender = {};\r\n    const toastList = props.newestOnTop\r\n      ? Object.keys(collection).reverse()\r\n      : Object.keys(collection);\r\n\r\n    for (let i = 0; i < toastList.length; i++) {\r\n      const toast = collection[toastList[i]];\r\n      const { position } = toast.props;\r\n      toastToRender[position] || (toastToRender[position] = []);\r\n\r\n      toastToRender[position]!.push(toast);\r\n    }\r\n\r\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\r\n      cb(p, toastToRender[p]!)\r\n    );\r\n  }\r\n\r\n  return {\r\n    getToastToRender,\r\n    collection,\r\n    containerRef,\r\n    isToastActive\r\n  };\r\n}\r\n","import {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  isValidElement,\r\n  DOMAttributes\r\n} from 'react';\r\n\r\nimport { isFn } from '../utils';\r\nimport { ToastProps } from '../types';\r\nimport { useKeeper } from './useKeeper';\r\n\r\ninterface Draggable {\r\n  start: number;\r\n  x: number;\r\n  y: number;\r\n  deltaX: number;\r\n  removalDistance: number;\r\n  canCloseOnClick: boolean;\r\n  canDrag: boolean;\r\n  boundingRect: DOMRect | null;\r\n}\r\n\r\ntype DragEvent = MouseEvent & TouchEvent;\r\n\r\nfunction getX(e: DragEvent) {\r\n  return e.targetTouches && e.targetTouches.length >= 1\r\n    ? e.targetTouches[0].clientX\r\n    : e.clientX;\r\n}\r\n\r\nfunction getY(e: DragEvent) {\r\n  return e.targetTouches && e.targetTouches.length >= 1\r\n    ? e.targetTouches[0].clientY\r\n    : e.clientY;\r\n}\r\n\r\nexport function useToast(props: ToastProps) {\r\n  const [isRunning, setIsRunning] = useState(true);\r\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\r\n  const toastRef = useRef<HTMLDivElement>(null);\r\n  const drag = useKeeper<Draggable>({\r\n    start: 0,\r\n    x: 0,\r\n    y: 0,\r\n    deltaX: 0,\r\n    removalDistance: 0,\r\n    canCloseOnClick: true,\r\n    canDrag: false,\r\n    boundingRect: null\r\n  });\r\n  const syncProps = useKeeper(props, true);\r\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\r\n\r\n  useEffect(() => {\r\n    if (isFn(props.onOpen))\r\n      props.onOpen(isValidElement(props.children) && props.children.props);\r\n\r\n    return () => {\r\n      if (isFn(syncProps.onClose))\r\n        syncProps.onClose(\r\n          isValidElement(syncProps.children) && syncProps.children.props\r\n        );\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.draggable && bindDragEvents();\r\n    return () => {\r\n      props.draggable && unbindDragEvents();\r\n    };\r\n  }, [props.draggable]);\r\n\r\n  useEffect(() => {\r\n    props.pauseOnFocusLoss && bindFocusEvents();\r\n    return () => {\r\n      props.pauseOnFocusLoss && unbindFocusEvents();\r\n    };\r\n  }, [props.pauseOnFocusLoss]);\r\n\r\n  function onDragStart(\r\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\r\n  ) {\r\n    const toast = toastRef.current!;\r\n    drag.canCloseOnClick = true;\r\n    drag.canDrag = true;\r\n    drag.boundingRect = toast.getBoundingClientRect();\r\n    toast.style.transition = '';\r\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\r\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\r\n  }\r\n\r\n  function onDragTransitionEnd() {\r\n    if (drag.boundingRect) {\r\n      const { top, bottom, left, right } = drag.boundingRect;\r\n\r\n      if (\r\n        props.pauseOnHover &&\r\n        drag.x >= left &&\r\n        drag.x <= right &&\r\n        drag.y >= top &&\r\n        drag.y <= bottom\r\n      ) {\r\n        pauseToast();\r\n      } else {\r\n        playToast();\r\n      }\r\n    }\r\n  }\r\n\r\n  function playToast() {\r\n    setIsRunning(true);\r\n  }\r\n\r\n  function pauseToast() {\r\n    setIsRunning(false);\r\n  }\r\n\r\n  function bindFocusEvents() {\r\n    window.addEventListener('focus', playToast);\r\n    window.addEventListener('blur', pauseToast);\r\n  }\r\n\r\n  function unbindFocusEvents() {\r\n    window.removeEventListener('focus', playToast);\r\n    window.removeEventListener('blur', pauseToast);\r\n  }\r\n\r\n  function bindDragEvents() {\r\n    document.addEventListener('mousemove', onDragMove);\r\n    document.addEventListener('mouseup', onDragEnd);\r\n\r\n    document.addEventListener('touchmove', onDragMove);\r\n    document.addEventListener('touchend', onDragEnd);\r\n  }\r\n\r\n  function unbindDragEvents() {\r\n    document.removeEventListener('mousemove', onDragMove);\r\n    document.removeEventListener('mouseup', onDragEnd);\r\n\r\n    document.removeEventListener('touchmove', onDragMove);\r\n    document.removeEventListener('touchend', onDragEnd);\r\n  }\r\n\r\n  function onDragMove(e: MouseEvent | TouchEvent) {\r\n    const toast = toastRef.current!;\r\n\r\n    if (drag.canDrag) {\r\n      if (isRunning) pauseToast();\r\n\r\n      drag.x = getX(e as DragEvent);\r\n      drag.deltaX = drag.x - drag.start;\r\n      drag.y = getY(e as DragEvent);\r\n\r\n      // prevent false positif during a toast click\r\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\r\n\r\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\r\n      toast.style.opacity = `${1 -\r\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\r\n    }\r\n  }\r\n\r\n  function onDragEnd() {\r\n    const toast = toastRef.current!;\r\n    if (drag.canDrag) {\r\n      drag.canDrag = false;\r\n\r\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\r\n        setPreventExitTransition(true);\r\n        props.closeToast();\r\n        return;\r\n      }\r\n\r\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\r\n      toast.style.transform = 'translateX(0)';\r\n      toast.style.opacity = '1';\r\n    }\r\n  }\r\n\r\n  const eventHandlers: DOMAttributes<HTMLElement> = {\r\n    onMouseDown: onDragStart,\r\n    onTouchStart: onDragStart,\r\n    onMouseUp: onDragTransitionEnd,\r\n    onTouchEnd: onDragTransitionEnd\r\n  };\r\n\r\n  if (autoClose && pauseOnHover) {\r\n    eventHandlers.onMouseEnter = pauseToast;\r\n    eventHandlers.onMouseLeave = playToast;\r\n  }\r\n\r\n  // prevent toast from closing when user drags the toast\r\n  if (closeOnClick) {\r\n    eventHandlers.onClick = (e: React.MouseEvent) => {\r\n      onClick && onClick(e);\r\n      drag.canCloseOnClick && closeToast();\r\n    };\r\n  }\r\n\r\n  return {\r\n    playToast,\r\n    pauseToast,\r\n    isRunning,\r\n    preventExitTransition,\r\n    toastRef,\r\n    eventHandlers\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport { DEFAULT } from '../utils';\r\nimport { TypeOptions } from '../types';\r\n\r\nexport interface CloseButtonProps {\r\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\r\n  type: TypeOptions;\r\n  ariaLabel?: string;\r\n}\r\n\r\nexport function CloseButton({\r\n  closeToast,\r\n  type,\r\n  ariaLabel = 'close'\r\n}: CloseButtonProps) {\r\n  return (\r\n    <button\r\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\r\n      type=\"button\"\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        closeToast(e);\r\n      }}\r\n      aria-label={ariaLabel}\r\n    >\r\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport cx from 'clsx';\r\n\r\nimport { TYPE, DEFAULT, isFn } from './../utils';\r\nimport { TypeOptions, ToastClassName } from '../types';\r\n\r\nexport interface ProgressBarProps {\r\n  /**\r\n   * The animation delay which determine when to close the toast\r\n   */\r\n  delay: number;\r\n\r\n  /**\r\n   * Whether or not the animation is running or paused\r\n   */\r\n  isRunning: boolean;\r\n\r\n  /**\r\n   * Func to close the current toast\r\n   */\r\n  closeToast: () => void;\r\n\r\n  /**\r\n   * Optional type : info, success ...\r\n   */\r\n  type: TypeOptions;\r\n\r\n  /**\r\n   * Hide or not the progress bar\r\n   */\r\n  hide?: boolean;\r\n\r\n  /**\r\n   * Optionnal className\r\n   */\r\n  className?: ToastClassName;\r\n\r\n  /**\r\n   * Optionnal inline style\r\n   */\r\n  style?: React.CSSProperties;\r\n\r\n  /**\r\n   * Tell wether or not controlled progress bar is used\r\n   */\r\n  controlledProgress?: boolean;\r\n\r\n  /**\r\n   * Controlled progress value\r\n   */\r\n  progress?: number | string;\r\n\r\n  /**\r\n   * Support rtl content\r\n   */\r\n  rtl?: boolean;\r\n\r\n  /**\r\n   * Tell if the component is visible on screen or not\r\n   */\r\n  isIn?: boolean;\r\n}\r\n\r\nexport function ProgressBar({\r\n  delay,\r\n  isRunning,\r\n  closeToast,\r\n  type,\r\n  hide,\r\n  className,\r\n  style: userStyle,\r\n  controlledProgress,\r\n  progress,\r\n  rtl,\r\n  isIn\r\n}: ProgressBarProps) {\r\n  const style: React.CSSProperties = {\r\n    ...userStyle,\r\n    animationDuration: `${delay}ms`,\r\n    animationPlayState: isRunning ? 'running' : 'paused',\r\n    opacity: hide ? 0 : 1\r\n  };\r\n\r\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\r\n  const defaultClassArr = [\r\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\r\n    controlledProgress\r\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\r\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\r\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\r\n    {\r\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\r\n    }\r\n  ];\r\n  const classNames = isFn(className)\r\n    ? className({\r\n        rtl,\r\n        type,\r\n        defaultClassName: cx(...defaultClassArr)\r\n      })\r\n    : cx(...[...defaultClassArr, className]);\r\n\r\n  // 🧐 controlledProgress is derived from progress\r\n  // so if controlledProgress is set\r\n  // it means that this is also the case for progress\r\n  const animationEvent = {\r\n    [controlledProgress && progress! >= 1\r\n      ? 'onTransitionEnd'\r\n      : 'onAnimationEnd']:\r\n      controlledProgress && progress! < 1\r\n        ? null\r\n        : () => {\r\n            isIn && closeToast();\r\n          }\r\n  };\r\n\r\n  return <div className={classNames} style={style} {...animationEvent} />;\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  type: TYPE.DEFAULT,\r\n  hide: false\r\n};\r\n","import * as React from 'react';\r\nimport cx from 'clsx';\r\n\r\nimport { ProgressBar } from './ProgressBar';\r\nimport { ToastProps } from '../types';\r\nimport { DEFAULT, isFn } from '../utils';\r\nimport { useToast } from '../hooks';\r\n\r\nexport const Toast: React.FC<ToastProps> = props => {\r\n  const {\r\n    isRunning,\r\n    preventExitTransition,\r\n    toastRef,\r\n    eventHandlers\r\n  } = useToast(props);\r\n  const {\r\n    closeButton,\r\n    children,\r\n    autoClose,\r\n    onClick,\r\n    type,\r\n    hideProgressBar,\r\n    closeToast,\r\n    transition: Transition,\r\n    position,\r\n    className,\r\n    style,\r\n    bodyClassName,\r\n    bodyStyle,\r\n    progressClassName,\r\n    progressStyle,\r\n    updateId,\r\n    role,\r\n    progress,\r\n    rtl,\r\n    toastId,\r\n    deleteToast\r\n  } = props;\r\n  const defaultClassArr = [\r\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\r\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\r\n    {\r\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\r\n    }\r\n  ];\r\n  const cssClasses = isFn(className)\r\n    ? className({\r\n        rtl,\r\n        position,\r\n        type,\r\n        defaultClassName: cx(...defaultClassArr)\r\n      })\r\n    : cx(...[...defaultClassArr, className]);\r\n  const controlledProgress = !!progress;\r\n\r\n  function renderCloseButton(closeButton: any) {\r\n    if (!closeButton) return;\r\n\r\n    const props = { closeToast, type };\r\n    if (isFn(closeButton)) return closeButton(props);\r\n    if (React.isValidElement(closeButton))\r\n      return React.cloneElement(closeButton, props);\r\n  }\r\n\r\n  return (\r\n    <Transition\r\n      in={props.in!}\r\n      appear\r\n      done={deleteToast}\r\n      position={position}\r\n      preventExitTransition={preventExitTransition}\r\n      nodeRef={toastRef}\r\n    >\r\n      <div\r\n        id={toastId as string}\r\n        onClick={onClick}\r\n        className={cssClasses || undefined}\r\n        {...eventHandlers}\r\n        style={style}\r\n        ref={toastRef}\r\n      >\r\n        <div\r\n          {...(props.in && { role: role })}\r\n          className={\r\n            isFn(bodyClassName)\r\n              ? bodyClassName({ type })\r\n              : cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)\r\n          }\r\n          style={bodyStyle}\r\n        >\r\n          {children}\r\n        </div>\r\n        {renderCloseButton(closeButton)}\r\n        {(autoClose || controlledProgress) && (\r\n          <ProgressBar\r\n            {...(updateId && !controlledProgress\r\n              ? { key: `pb-${updateId}` }\r\n              : {})}\r\n            rtl={rtl}\r\n            delay={autoClose as number}\r\n            isRunning={isRunning}\r\n            isIn={props.in}\r\n            closeToast={closeToast}\r\n            hide={hideProgressBar}\r\n            type={type}\r\n            style={progressStyle}\r\n            className={progressClassName}\r\n            controlledProgress={controlledProgress}\r\n            progress={progress}\r\n          />\r\n        )}\r\n      </div>\r\n    </Transition>\r\n  );\r\n};\r\n","import { DEFAULT, cssTransition } from '../utils';\r\n\r\nconst Bounce = cssTransition({\r\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\r\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\r\n  appendPosition: true\r\n});\r\n\r\nconst Slide = cssTransition({\r\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\r\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\r\n  duration: [450, 750],\r\n  appendPosition: true\r\n});\r\n\r\nconst Zoom = cssTransition({\r\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\r\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\r\n});\r\n\r\nconst Flip = cssTransition({\r\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\r\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\r\n});\r\n\r\nexport { Bounce, Slide, Zoom, Flip };\r\n","import * as React from 'react';\r\nimport { ToastProps } from '../types';\r\ntype ToastPositionerProps = Pick<ToastProps, 'style' | 'in'> & {\r\n  className?: string;\r\n};\r\n\r\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\r\n  children,\r\n  className,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  // Monkey patch react-transition-group\r\n  // As exit transition is broken with strict mode\r\n  delete rest.in;\r\n\r\n  return (\r\n    <div className={className} style={style}>\r\n      {React.Children.map(children, child =>\r\n        React.cloneElement(child as React.ReactElement<any>, rest)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'clsx';\r\n\r\nimport { Toast } from './Toast';\r\nimport { CloseButton } from './CloseButton';\r\nimport { Slide } from './Transitions';\r\nimport {\r\n  POSITION,\r\n  DEFAULT,\r\n  parseClassName,\r\n  objectValues,\r\n  isFn\r\n} from '../utils';\r\nimport { useToastContainer } from '../hooks';\r\nimport { ToastContainerProps, ToastPosition } from '../types';\r\nimport { ToastPositioner } from './ToastPositioner';\r\n\r\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\r\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\r\n    props\r\n  );\r\n  const { className, style, rtl, containerId } = props;\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={DEFAULT.CSS_NAMESPACE as string}\r\n      id={containerId as string}\r\n    >\r\n      {getToastToRender((position, toastList) => {\r\n        const swag = {\r\n          className: isFn(className)\r\n            ? className({\r\n                position,\r\n                rtl,\r\n                defaultClassName: cx(\r\n                  `${DEFAULT.CSS_NAMESPACE}__toast-container`,\r\n                  `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\r\n                  { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\r\n                )\r\n              })\r\n            : cx(\r\n                `${DEFAULT.CSS_NAMESPACE}__toast-container`,\r\n                `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\r\n                { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\r\n                parseClassName(className)\r\n              ),\r\n          style:\r\n            toastList.length === 0\r\n              ? { ...style, pointerEvents: 'none' }\r\n              : { ...style }\r\n        } as any;\r\n        return (\r\n          <ToastPositioner {...swag} key={`container-${position}`}>\r\n            {toastList.map(({ content, props: toastProps }) => {\r\n              return (\r\n                <Toast\r\n                  {...toastProps}\r\n                  in={isToastActive(toastProps.toastId)}\r\n                  key={`toast-${toastProps.key}`}\r\n                  closeButton={\r\n                    toastProps.closeButton === true\r\n                      ? CloseButton\r\n                      : toastProps.closeButton\r\n                  }\r\n                >\r\n                  {content}\r\n                </Toast>\r\n              );\r\n            })}\r\n          </ToastPositioner>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // @ts-ignore\r\n  ToastContainer.propTypes = {\r\n    // @ts-ignore\r\n    position: PropTypes.oneOf(objectValues(POSITION)),\r\n\r\n    // @ts-ignore\r\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n\r\n    // @ts-ignore\r\n    closeButton: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.bool,\r\n      PropTypes.func\r\n    ]),\r\n    hideProgressBar: PropTypes.bool,\r\n    pauseOnHover: PropTypes.bool,\r\n    closeOnClick: PropTypes.bool,\r\n    newestOnTop: PropTypes.bool,\r\n    className: PropTypes.any, //oneOfType([PropTypes.func, PropTypes.string]),\r\n    style: PropTypes.object,\r\n    toastClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    bodyClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    progressClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    progressStyle: PropTypes.object,\r\n    transition: PropTypes.func,\r\n    rtl: PropTypes.bool,\r\n    draggable: PropTypes.bool,\r\n    draggablePercent: PropTypes.number,\r\n    pauseOnFocusLoss: PropTypes.bool,\r\n    enableMultiContainer: PropTypes.bool,\r\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    role: PropTypes.string,\r\n    onClick: PropTypes.func\r\n  };\r\n}\r\n\r\nToastContainer.defaultProps = {\r\n  position: POSITION.BOTTOM_LEFT as ToastPosition,\r\n  transition: Slide,\r\n  rtl: false,\r\n  autoClose: 3000,\r\n  hideProgressBar: true,\r\n  closeButton: CloseButton,\r\n  pauseOnHover: true,\r\n  pauseOnFocusLoss: true,\r\n  closeOnClick: true,\r\n  newestOnTop: false,\r\n  draggable: true,\r\n  draggablePercent: 40,\r\n  role: 'alert'\r\n};\r\n","import * as React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\r\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\r\nimport {\r\n  ToastContent,\r\n  ToastOptions,\r\n  ToastProps,\r\n  Id,\r\n  ToastContainerProps,\r\n  UpdateOptions,\r\n  ClearWaitingQueueParams,\r\n  NotValidatedToastProps\r\n} from '../types';\r\nimport { ContainerInstance } from 'hooks';\r\nimport { ToastContainer } from '../components';\r\n\r\ninterface EnqueuedToast {\r\n  content: ToastContent;\r\n  options: NotValidatedToastProps;\r\n}\r\n\r\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\r\nlet latestInstance: ContainerInstance | Id;\r\nlet containerDomNode: HTMLElement;\r\nlet containerConfig: ToastContainerProps;\r\nlet queue: EnqueuedToast[] = [];\r\nlet lazy = false;\r\n\r\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\r\nfunction isAnyContainerMounted() {\r\n  return containers.size > 0;\r\n}\r\n\r\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\r\nfunction getContainer(containerId?: Id) {\r\n  if (!isAnyContainerMounted()) return null;\r\n  return containers.get(!containerId ? latestInstance : containerId);\r\n}\r\n\r\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\r\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\r\n  const container = getContainer(containerId);\r\n  if (!container) return null;\r\n\r\n  return container.getToast(toastId);\r\n}\r\n\r\n/**\r\n * Generate a random toastId\r\n */\r\nfunction generateToastId() {\r\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\r\n}\r\n\r\n/**\r\n * Generate a toastId or use the one provided\r\n */\r\nfunction getToastId(options?: ToastOptions) {\r\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\r\n    return options.toastId;\r\n  }\r\n\r\n  return generateToastId();\r\n}\r\n\r\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\r\nfunction dispatchToast(\r\n  content: ToastContent,\r\n  options: NotValidatedToastProps\r\n): Id {\r\n  if (isAnyContainerMounted()) {\r\n    eventManager.emit(Event.Show, content, options);\r\n  } else {\r\n    queue.push({ content, options });\r\n    if (lazy && canUseDom) {\r\n      lazy = false;\r\n      containerDomNode = document.createElement('div');\r\n      document.body.appendChild(containerDomNode);\r\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\r\n    }\r\n  }\r\n\r\n  return options.toastId;\r\n}\r\n\r\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\r\nfunction mergeOptions(type: string, options?: ToastOptions) {\r\n  return {\r\n    ...options,\r\n    type: (options && options.type) || type,\r\n    toastId: getToastId(options)\r\n  } as NotValidatedToastProps;\r\n}\r\n\r\nconst toast = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\r\n\r\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\r\n\r\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\r\n\r\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\r\n\r\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\r\n\r\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\r\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\r\n\r\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\r\ntoast.warn = toast.warning;\r\n\r\n/**\r\n * Remove toast programmaticaly\r\n */\r\ntoast.dismiss = (id?: Id) =>\r\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\r\n\r\n/**\r\n * Clear waiting queue when limit is used\r\n */\r\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\r\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\r\n\r\n/**\r\n * return true if one container is displaying the toast\r\n */\r\ntoast.isActive = (id: Id) => {\r\n  let isToastActive = false;\r\n\r\n  containers.forEach(container => {\r\n    if (container.isToastActive && container.isToastActive(id)) {\r\n      isToastActive = true;\r\n    }\r\n  });\r\n\r\n  return isToastActive;\r\n};\r\n\r\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\r\n  // if you call toast and toast.update directly nothing will be displayed\r\n  // this is why I defered the update\r\n  setTimeout(() => {\r\n    const toast = getToast(toastId, options as ToastOptions);\r\n    if (toast) {\r\n      const { props: oldOptions, content: oldContent } = toast;\r\n\r\n      const nextOptions = {\r\n        ...oldOptions,\r\n        ...options,\r\n        toastId: options.toastId || toastId,\r\n        updateId: generateToastId()\r\n      } as ToastProps & UpdateOptions;\r\n\r\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\r\n\r\n      const content =\r\n        typeof nextOptions.render !== 'undefined'\r\n          ? nextOptions.render\r\n          : oldContent;\r\n      delete nextOptions.render;\r\n\r\n      dispatchToast(content, nextOptions);\r\n    }\r\n  }, 0);\r\n};\r\n\r\n/**\r\n * Used for controlled progress bar.\r\n */\r\ntoast.done = (id: Id) => {\r\n  toast.update(id, {\r\n    progress: 1\r\n  });\r\n};\r\n\r\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\r\ntoast.onChange = (callback: OnChangeCallback) => {\r\n  if (isFn(callback)) {\r\n    eventManager.on(Event.Change, callback);\r\n  }\r\n  return () => {\r\n    isFn(callback) && eventManager.off(Event.Change, callback);\r\n  };\r\n};\r\n\r\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\r\ntoast.configure = (config: ToastContainerProps = {}) => {\r\n  lazy = true;\r\n  containerConfig = config;\r\n};\r\n\r\ntoast.POSITION = POSITION;\r\ntoast.TYPE = TYPE;\r\n\r\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\r\neventManager\r\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\r\n    latestInstance = containerInstance.containerId || containerInstance;\r\n    containers.set(latestInstance, containerInstance);\r\n\r\n    queue.forEach(item => {\r\n      eventManager.emit(Event.Show, item.content, item.options);\r\n    });\r\n\r\n    queue = [];\r\n  })\r\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\r\n    containers.delete(containerInstance.containerId || containerInstance);\r\n\r\n    if (containers.size === 0) {\r\n      eventManager\r\n        .off(Event.Show)\r\n        .off(Event.Clear)\r\n        .off(Event.ClearWaitingQueue);\r\n    }\r\n\r\n    if (canUseDom && containerDomNode) {\r\n      document.body.removeChild(containerDomNode);\r\n    }\r\n  });\r\n\r\nexport { toast };\r\n"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","hasToastId","toastId","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","DEFAULT","Event","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DARK","collapseToast","node","done","duration","height","scrollHeight","style","requestAnimationFrame","minHeight","transition","padding","margin","setTimeout","cssTransition","enterDuration","exitDuration","enter","exit","appendPosition","collapse","collapseDuration","Array","isArray","length","children","position","preventExitTransition","props","enterClassName","exitClassName","onExited","nodeRef","current","removeEventListener","React","Transition","timeout","onEnter","classList","add","animationFillMode","animationDuration","onEntered","remove","cssText","onExit","addEventListener","unmountOnExit","eventManager","list","Map","emitQueue","on","event","callback","has","this","set","get","push","off","cb","filter","cancelEmit","timers","forEach","timer","clearTimeout","emit","args","_this","useKeeper","arg","refresh","ref","useRef","useEffect","reducer","state","action","type","id","staleId","useToastContainer","forceUpdate","useReducer","x","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","indexOf","clearWaitingQueue","limit","enableMultiContainer","removeToast","queueLen","freeSlot","dequeueToast","toDequeue","i","shift","toastContent","toastProps","appendToast","buildToast","delay","options","updateId","isNotValid","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","className","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","onOpen","onClose","cloneElement","getToastToRender","toastToRender","toastList","newestOnTop","Object","keys","reverse","map","p","getX","e","targetTouches","clientX","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","onDragTransitionEnd","left","right","top","bottom","pauseToast","playToast","onDragMove","clientY","getY","transform","opacity","Math","abs","onDragEnd","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","controlledProgress","isIn","animationPlayState","hide","defaultClassArr","classNames","defaultClassName","cx","animationEvent","defaultProps","Toast","cssClasses","appear","undefined","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastPositioner","rest","child","ToastContainer","CSS_NAMESPACE","swag","pointerEvents","latestInstance","containerDomNode","containerConfig","containers","lazy","isAnyContainerMounted","size","generateToastId","random","toString","Date","now","substr","getToastId","dispatchToast","body","appendChild","render","mergeOptions","success","info","error","warning","dark","warn","dismiss","params","isActive","container","update","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"mappings":"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"}