{"ast":null,"code":"var _jsxFileName = \"D:\\\\final spl2\\\\COFFE\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport nature from \"../../images/nature.svg\";\nimport logo1 from \"../../images/logo1.svg\";\nimport travel from \"../../images/travel.svg\";\nimport hobbyists from '../../images/hobbyists.png';\nimport quiz from '../../images/quiz.png';\nimport biking from \"../../images/biking.svg\";\nimport cooking from \"../../images/cooking.svg\";\nimport garden from \"../../images/garden.svg\";\nimport view from \"../../images/view.svg\";\nimport cam from \"../../images/cam.svg\";\nimport creative from \"../../images/creative.svg\";\nimport logo3 from \"../../images/logo3.svg\";\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const [toggleMenu, setToggleMenu] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: ['Fresca', 'sans-serif'].join(',')\n    }\n  });\n\n  const toggleNav = () => {\n    setToggleMenu(!toggleMenu);\n  };\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    history.push('/auth');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: classes.brandContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.hobbyists,\n    component: Link,\n    to: \"/\",\n    src: hobbyists,\n    alt: \"icon\",\n    height: \"60px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/QuizHome\",\n    className: classes.brandContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.quiz,\n    component: Link,\n    to: \"/QuizHome\",\n    src: quiz,\n    alt: \"icon\",\n    height: \"60px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.purple,\n    alt: user === null || user === void 0 ? void 0 : user.result.name,\n    src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name.charAt(0)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.userName,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, user === null || user === void 0 ? void 0 : user.result.name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.logout,\n    color: \"secondary\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(Button, {\n    className: classes.signin,\n    component: Link,\n    to: \"/auth\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Sign In\"))));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["D:/final spl2/COFFE/client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","AppBar","Typography","Toolbar","Avatar","Button","createMuiTheme","ThemeProvider","Link","useHistory","useLocation","useDispatch","decode","hobbyists","quiz","actionType","useStyles","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","toggleMenu","setToggleMenu","screenWidth","setScreenWidth","window","innerWidth","theme","typography","fontFamily","join","toggleNav","logout","type","LOGOUT","push","token","decodedToken","exp","Date","getTime","appBar","brandContainer","toolbar","result","profile","purple","name","imageUrl","charAt","userName","signin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button ,createMuiTheme, ThemeProvider  } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\n\r\n\r\nimport nature from '../../images/nature.svg';\r\n\r\nimport logo1 from '../../images/logo1.svg';\r\n\r\nimport travel from '../../images/travel.svg';\r\nimport hobbyists from '../../images/hobbyists.png';\r\nimport quiz from '../../images/quiz.png';\r\nimport biking from '../../images/biking.svg';\r\nimport cooking from '../../images/cooking.svg';\r\nimport garden from '../../images/garden.svg';\r\nimport view from '../../images/view.svg';\r\nimport cam from '../../images/cam.svg';\r\nimport creative from '../../images/creative.svg';\r\nimport logo3 from '../../images/logo3.svg';\r\n\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [toggleMenu, setToggleMenu] = useState(false)\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n  const theme=createMuiTheme({\r\n  \r\n    typography:{\r\n     fontFamily: [\r\n      'Fresca', \r\n      'sans-serif'\r\n     ].join(','),\r\n    }\r\n \r\n  });\r\n\r\n  const toggleNav = () => {\r\n    setToggleMenu(!toggleMenu)\r\n  }\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n\r\n\r\n\r\n      <Link to=\"/\" className={classes.brandContainer}>\r\n        <img className={classes.hobbyists} component={Link} to=\"/\" src={hobbyists} alt=\"icon\" height=\"60px\" />\r\n      </Link>\r\n\r\n      <Link to=\"/QuizHome\" className={classes.brandContainer}>\r\n        <img className={classes.quiz} component={Link} to=\"/QuizHome\" src={quiz} alt=\"icon\" height=\"60px\" />\r\n      </Link>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button className={classes.signin} component={Link} to=\"/auth\" variant=\"contained\" >Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n       </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}